name: Run Tests

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: test_root_password
          MYSQL_DATABASE: test_database
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    # 1. Checkout del repositorio
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Configurar Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'  

    # 3. Instalar dependencias
    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    # 4. Configurar base de datos
    - name: Initialize database
      run: |
        mysql -h 127.0.0.1 -u test_user -ptest_password -e "CREATE DATABASE IF NOT EXISTS test_database;"

    # 5. Aplicar migraciones (si usas Flask-Migrate)
    - name: Apply migrations
      run: |
        source venv/bin/activate
        flask db upgrade

    # 6. Ejecutar pruebas
    - name: Run tests
      env:
        FLASK_ENV: testing
        MYSQL_HOST: 127.0.0.1
        MYSQL_PORT: 3306
        MYSQL_DATABASE: test_database
        MYSQL_USER: test_user
        MYSQL_PASSWORD: test_password
        DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      run: |
        source venv/bin/activate
        pytest --maxfail=5 --disable-warnings

    # 7. Generar reporte de cobertura
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: htmlcov/ 
